; exercise 378
(define (merge l1 l2)
  (cond
    [(empty? l1) l2]
    [(empty? l2) l1]
    [else (if (> (first l1) (first l2))
              (cons (first l2) (merge l1 (rest l2)))
              (cons (first l1) (merge l2 (rest l1))))]))
; exercise 379
(define (drop l n)
  (cond
    [(or (zero? n) (empty? l)) l]
    [else (drop (rest l) (sub1 n))]))

(define (take l n)
  (cond
    [(or (zero? n) (empty? l)) '()]
    [else (cons (first l)
                (take (rest l) (sub1 n)))]))
